---
- name: Login to oVirt
  ovirt_auth:
    url: "{{ engine_url }}"
    username: "{{ engine_user }}"
    password: "{{ engine_password }}"
    ca_file: "{{ engine_cafile | default(omit) }}"
    insecure: "{{ engine_insecure | default(true) }}"
  tags:
    - always

- name: Add datacenter
  ovirt_datacenters:  
    auth: "{{ ovirt_auth }}"
    state: present
    name: "{{ dc_name }}"
    description: "{{ dc_description | default(omit) }}"
    local: "{{ dc_local | default(false) }}"
    compatibility_version: "{{ compatibility_version }}"
  tags:
    - datacenters

- name: Add clusters
  ovirt_clusters:
    auth: "{{ ovirt_auth }}"
    state: present
    name: "{{ item.name }}"
    data_center: "{{ dc_name }}"
    cpu_type: "{{ item.cpu_type | default('Intel Conroe Family') }}"
    compatibility_version: "{{ compatibility_version }}"
    ballooning: "{{ item.ballooning | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    ksm: "{{ item.ksm | default(omit) }}"
    ksm_numa: "{{ item.ksm_numa | default(omit) }}"
    host_reason: "{{ item.host_reason | default(omit) }}"
    vm_reason: "{{ item.vm_reason | default(omit) }}"
    memory_policy: "{{ item.memory_policy | default('disabled') }}"
    migration_policy: "{{ item.migration_policy | default(omit) }}"
    scheduling_policy: "{{ item.scheduling_policy | default(omit) }}"
    ha_reservation: "{{ item.ha_reservation | default(omit) }}"
    fence_enabled: "{{ item.fence_enabled | default(omit) }}"
    fence_skip_if_connectivity_broken: "{{ item.fence_skip_if_connectivity_broken | default(omit) }}"
    fence_skip_if_sd_active: "{{ item.fence_skip_if_sd_active | default(omit) }}"
  with_items:
    - "{{ clusters | default([]) }}"
  tags:
    - clusters

- name: Get hosts
  ovirt_hosts_facts:
    auth: "{{ ovirt_auth }}"
    pattern: "name=*"
  tags:
    - hosts
    - reinstall

- name: Reinstall hosts
  ovirt_hosts:
    auth: "{{ ovirt_auth }}"
    state: reinstalled
    name: "{{ item.name }}"
  with_items:
    - "{{ ovirt_hosts | default([]) }}"
  when: item.status == 'install_failed'
  tags:
    - hosts
    - reinstall

- name: Add hosts
  ovirt_hosts:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.name }}"
    address: "{{ item.address }}"
    password: "{{ item.password }}"
    cluster: "{{ item.cluster }}"
    override_iptables: true
    timeout: "{{ item.timeout | default(600) }}"
    poll_interval: "{{ item.poll_interval | default(15) }}"
  with_items:
    - "{{ hosts | default([]) }}"
  tags:
    - hosts

# In dict the default(omit) don't work:
# https://github.com/ansible/ansible/issues/14130
- name: Add NFS storages
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.name }}"
    host: "{{ hosts[0].name }}"
    data_center: "{{ dc_name }}"
    nfs:
      address: "{{ item.address }}"
      path: "{{ item.path }}"
  with_items:
    - "{{ nfs | default([]) }}"
  tags:
    - storages
    - nfs

- name: Add NFS storages
  ovirt_storage_domains_facts:
    auth: "{{ ovirt_auth }}"
    pattern: "type=nfs"
    fetch_nested: true
  tags:
    - storages
    - nfs

# To achieve idempotency of the role, we must validate the connections of the NFS server:
- name: Validate connections of NFS storage
  ovirt_storage_connections:
    auth: "{{ ovirt_auth }}"
    id: "{{ item.1.id[0] }}"
    storage: "{{ item.0.name }}"
    address: "{{ nfs|json_query(\"[?name=='\" + item.0.name + \"'].address\")|first | default(omit) }}"
    path: "{{ nfs|json_query(\"[?name=='\" + item.0.name + \"'].path\")|first | default(omit) }}"
    nfs_timeout: "{{ nfs|json_query(\"[?name=='\" + item.0.name + \"'].timeout\")|first | default(omit) }}"
    nfs_version: "{{ nfs|json_query(\"[?name=='\" + item.0.name + \"'].version\")|first | default(omit)}}"
    nfs_retrans: "{{ nfs|json_query(\"[?name=='\" + item.0.name + \"'].retrans\")|first | default(omit)}}"
    force: true
  with_subelements:
    - "{{ ovirt_storage_domains | default([]) }}"
    - storage_connections
  tags:
    - storages
    - nfs

- name: Add export storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    host: "{{ hosts[0].name }}"
    name: "{{ export.name }}"
    data_center: "{{ dc_name }}"
    domain_function: export
    nfs:
      address: "{{ export.address }}"
      path: "{{ export.path }}"
  when: "export is defined"
  tags:
    - storages
    - export

- name: Add ISO storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    host: "{{ hosts[0].name }}"
    name: "{{ iso.name }}"
    data_center: "{{ dc_name }}"
    domain_function: iso
    nfs:
      address: "{{ iso.address }}"
      path: "{{ iso.path }}"
  when: "iso is defined"
  tags:
    - storages
    - iso

- name: Add networks
  ovirt_networks:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.name }}"
    data_center: "{{ dc_name }}"
    vlan_tag: "{{ item.vlan_tag | default(omit) }}"
    vm_network: "{{ item.vm_network | default(omit) }}"
    mtu: "{{ item.mtu | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    clusters: "{{ item.clusters | default(omit) }}"
  with_items:
      - "{{ networks | default([]) }}"
  tags:
    - networks

- name: Manage users
  ovirt_users:
    auth: "{{ ovirt_auth }}"
    state: "{{ item.state | default(omit) }}"
    name: "{{ item.name }}"
    authz_name: "{{ item.authz_name | default(omit) }}"
  with_items:
      - "{{ users | default([]) }}"
  tags:
    - users
    - permissions

- name: Manage groups
  ovirt_groups:
    auth: "{{ ovirt_auth }}"
    state: "{{ item.state | default(omit) }}"
    name: "{{ item.name }}"
    authz_name: "{{ item.authz_name | default(omit) }}"
  with_items:
      - "{{ user_groups | default([]) }}"
  tags:
    - user_groups
    - permissions

- name: Manage permissions
  ovirt_permissions:
    auth: "{{ ovirt_auth }}"
    state: "{{ item.state | default(omit) }}"
    group_name: "{{ item.group_name | default(omit) }}"
    user_name: "{{ item.user_name | default(omit) }}"
    authz_name: "{{ item.authz_name }}"
    object_type: "{{ item.object_type }}"
    object_name: "{{ item.object_name }}"
    role: "{{ item.role }}"
  with_items:
      - "{{ permissions | default([]) }}"
  tags:
    - permissions

- name: Logout from oVirt
  ovirt_auth:
    state: absent
    ovirt_auth: "{{ ovirt_auth }}"
  tags:
    - always
