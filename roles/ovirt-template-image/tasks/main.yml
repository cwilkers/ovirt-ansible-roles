---
- name: Download the qcow image
  get_url:
    url: "{{ qcow_url }}"
    dest: "{{ image_path }}"
  register: downloaded
  tags:
    - ovirt-template-image

- name: Check file type
  command: "/usr/bin/file {{ image_path | quote }}"
  changed_when: false
  register: filetype
  tags:
    - ovirt-template-image

- name: Fail if image is not qcow
  fail:
    msg: "The downloaded file is not valid QCOW file."
  when: '"QCOW" not in filetype.stdout'
  tags:
    - ovirt-template-image

- name: Fetch storages
  ovirt_storage_domains_facts:
    auth: "{{ ovirt_auth }}"
  when: template_disk_storage is undefined
  tags:
    - ovirt-template-image

- name: Find data domain
  set_fact:
    disk_storage_domain: "{{ ovirt_storage_domains|selectattr('type', 'equalto', 'data')|first }}"
  when: template_disk_storage is undefined
  tags:
    - ovirt-template-image

- name: Check if template already exists
  ovirt_templates_facts:
    auth: "{{ ovirt_auth }}"
    pattern: "name={{ template_name }}"
  tags:
    - ovirt-template-image

- name: Deploy the qcow image to oVirt engine
  ovirt_disks:
    auth: "{{ ovirt_auth }}"
    name: "{{ template_disk_name | default(template_name) }}"
    interface: virtio
    size: "{{ template_disk_size}}"
    format: cow
    image_path: "{{ image_path }}"
    #storage_domain: "{{ template_disk_storage | default(disk_storage_domain.name) }}"
    storage_domain: "{{ template_disk_storage | default('nfs') }}"
    force: "{{ ovirt_templates | length == 0 }}"
  register: ovirt_disk
  tags:
    - ovirt-template-image

- name: Create vm
  ovirt_vms:
    auth: "{{ ovirt_auth }}"
    name: "{{ vm_name }}"
    state: stopped
    cluster: "{{ template_cluster }}"
    memory: "{{ template_memory }}"
    cpu_cores: "{{ template_cpu }}"
    operating_system: rhel_7x64
    type: server
    disks:
      - id: "{{ ovirt_disk.id }}"
        bootable: true
    nics: "{{ template_nics }}"
  when: ovirt_templates | length == 0
  tags:
    - ovirt-template-image

- name: Create template
  ovirt_templates:
    auth: "{{ ovirt_auth }}"
    name: "{{ template_name }}"
    vm: "{{ vm_name }}"
  when: ovirt_templates | length == 0
  tags:
    - ovirt-template-image

- name: Remove vm
  ovirt_vms:
    auth: "{{ ovirt_auth }}"
    state: absent
    name: "{{ vm_name }}"
  when: ovirt_templates | length == 0
  tags:
    - ovirt-template-image
